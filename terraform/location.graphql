# Location Types
enum LocationType {
  address
  coordinates
}

# Address Type
type Address {
  streetAddress: String!
  streetAddress2: String
  city: String!
  stateProvince: String
  postalCode: String!
  country: String!
}

# Coordinates Type
type Coordinates {
  latitude: Float!
  longitude: Float!
  altitude: Float
  accuracy: Float
}

# Location Interface
interface Location {
  accountId: String!
  locationType: LocationType!
  extendedAttributes: AWSJSON
}

# Concrete Location Types
type AddressLocation implements Location {
  accountId: String!
  locationType: LocationType!
  extendedAttributes: AWSJSON
  address: Address!
}

type CoordinatesLocation implements Location {
  accountId: String!
  locationType: LocationType!
  extendedAttributes: AWSJSON
  coordinates: Coordinates!
}

# Union Type for Location Results
union LocationResult = AddressLocation | CoordinatesLocation

# Input Types
input AddressInput {
  streetAddress: String!
  streetAddress2: String
  city: String!
  stateProvince: String
  postalCode: String!
  country: String!
}

input CoordinatesInput {
  latitude: Float!
  longitude: Float!
  altitude: Float
  accuracy: Float
}

input CreateAddressLocationInput {
  accountId: String!
  address: AddressInput!
  extendedAttributes: AWSJSON
}

input CreateCoordinatesLocationInput {
  accountId: String!
  coordinates: CoordinatesInput!
  extendedAttributes: AWSJSON
}

input UpdateAddressLocationInput {
  accountId: String!
  address: AddressInput!
  extendedAttributes: AWSJSON
}

input UpdateCoordinatesLocationInput {
  accountId: String!
  coordinates: CoordinatesInput!
  extendedAttributes: AWSJSON
}

# List Result Type
type LocationListResult {
  locations: [LocationResult!]!
  nextCursor: String
}

# List Options Input
input ListLocationsInput {
  limit: Int
  cursor: String
}