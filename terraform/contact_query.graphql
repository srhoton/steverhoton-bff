# Contact type definition
type Contact {
  accountId: String!
  contactId: String!
  email: String!
  firstName: String
  lastName: String
  phone: String
  status: String
  contactType: String!
  locationIds: [String]
  config: AWSJSON
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

# List output type for paginated results
type ContactListOutput {
  items: [Contact!]!
  nextToken: String
}

# Input types for mutations and queries
input CreateContactInput {
  accountId: String!
  email: String!
  contactType: String!
  firstName: String
  lastName: String
  phone: String
  status: String
  locationIds: [String]
  config: AWSJSON
}

input UpdateContactInput {
  accountId: String!
  email: String!
  contactType: String
  firstName: String
  lastName: String
  phone: String
  status: String
  locationIds: [String]
  config: AWSJSON
}

input GetContactInput {
  accountId: String
  email: String!
}

input DeleteContactInput {
  accountId: String!
  email: String!
}

input ListContactsInput {
  accountId: String!
  limit: Int
  nextToken: String
  startDate: AWSDateTime
  endDate: AWSDateTime
}

input GetContactByContactIdInput {
  contactId: String!
}

# Define Mutation type for contact, location, account, and units operations
type Mutation {
  createContact(input: CreateContactInput!): Boolean
  updateContact(input: UpdateContactInput!): Contact
  deleteContact(input: DeleteContactInput!): Boolean
  createAddressLocation(input: CreateAddressLocationInput!): String
  createCoordinatesLocation(input: CreateCoordinatesLocationInput!): String
  createShopLocation(input: CreateShopLocationInput!): String
  updateAddressLocation(locationId: String!, input: UpdateAddressLocationInput!): Boolean
  updateCoordinatesLocation(locationId: String!, input: UpdateCoordinatesLocationInput!): Boolean
  updateShopLocation(locationId: String!, input: UpdateShopLocationInput!): Boolean
  deleteLocation(accountId: String!, locationId: String!): Boolean
  createAccount(input: CreateAccountInput!): Account
  updateAccount(input: UpdateAccountInput!): Account
  deleteAccount(input: DeleteAccountInput!): DeleteAccountResponse
  createUnit(input: CreateUnitInput!): UnitResponse
  updateUnit(input: UpdateUnitInput!): UnitResponse
  deleteUnit(input: DeleteUnitInput!): DeleteUnitResponse
  createPart(input: CreatePartInput!): Part
  updatePart(input: UpdatePartInput!): Part
  deletePart(input: DeletePartInput!): DeletePartResponse
  createActionJob(input: CreateActionJobInput!): ActionJob
  updateActionJob(input: UpdateActionJobInput!): ActionJob
  deleteActionJob(input: DeleteActionJobInput!): DeleteActionJobResponse
  createEvent(input: CreateEventInput!): Event
  updateEvent(input: UpdateEventInput!): Event
  deleteEvent(input: DeleteEventInput!): DeleteEventResponse
  createLaborLine(input: CreateLaborLineInput!): LaborLine!
  updateLaborLine(input: UpdateLaborLineInput!): LaborLine!
  deleteLaborLine(input: DeleteLaborLineInput!): DeleteLaborLineResponse!
  createTask(input: CreateTaskInput!): Task!
  updateTask(input: UpdateTaskInput!): Task!
  deleteTask(input: DeleteTaskInput!): DeleteTaskResponse!
  createWorkOrder(input: CreateWorkOrderInput!): WorkOrder!
  updateWorkOrder(input: UpdateWorkOrderInput!): WorkOrder!
  deleteWorkOrder(accountId: ID!, workOrderId: ID!): Boolean!
}